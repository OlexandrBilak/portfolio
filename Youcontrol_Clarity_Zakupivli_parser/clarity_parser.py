from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
import time
import pandas as pd
import os

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
INPUT_FILE = "regional_links_out.xlsx"
OUTPUT_FILE = "regional_links_out.xlsx"


# === –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä–∞ –∑ –ø—Ä–æ—Ñ—ñ–ª–µ–º Chrome ===
def create_driver():
    options = webdriver.ChromeOptions()
    options.add_argument("--start-maximized")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–∫—Ä–µ–º—É –ø–∞–ø–∫—É –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é
    profile_path = os.path.abspath("SeleniumProfile")
    options.add_argument(f"--user-data-dir={profile_path}")
    # –ù–µ –≤–∫–∞–∑—É—î–º–æ --profile-directory, —â–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å —É —Ü—ñ–π –ø–∞–ø—Ü—ñ

    driver = webdriver.Chrome(service=Service(), options=options)
    return driver



# === –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø–æ –∫–æ–¥—É –Ñ–î–†–ü–û–£ ===
def get_phone_number(driver, edrpou):
    try:
        # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ—à—É–∫—É
        search_url = f"https://clarity-project.info/edrs?query={edrpou}"
        driver.get(search_url)
        time.sleep(2)

        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∫–æ–º–ø–∞–Ω—ñ—ó
        profile_link_elem = driver.find_element(By.CSS_SELECTOR, "h5.mb-10 a[href^='/edr/']")
        profile_url = profile_link_elem.get_attribute("href")
        driver.get(profile_url)
        time.sleep(2)

        # –®—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É
        phone_elem = driver.find_element(By.CSS_SELECTOR, "a[href^='tel:']")
        phone = phone_elem.text.strip()

        print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
        return phone

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {edrpou} ‚Äî {e}")
        return ""


# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
def main(batch_size=None):
    df = pd.read_excel(INPUT_FILE)

    if "–ö–æ–¥ –Ñ–î–†–ü–û–£" not in df.columns:
        print("‚ùå –£ —Ñ–∞–π–ª—ñ –Ω–µ–º–∞—î –∫–æ–ª–æ–Ω–∫–∏ '–ö–æ–¥ –Ñ–î–†–ü–û–£'")
        return

    if "–¢–µ–ª–µ—Ñ–æ–Ω" not in df.columns:
        df["–¢–µ–ª–µ—Ñ–æ–Ω"] = ""

    driver = create_driver()

    driver.get("https://clarity-project.info/account")
    time.sleep(2)

    if "–£–≤—ñ–π—Ç–∏" in driver.page_source or "—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è" in driver.page_source.lower():
        print("üîê –ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É —É –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ, –ø–æ—Ç—ñ–º –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter...")
        input("‚úÖ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤ –∞–∫–∞—É–Ω—Ç...")
        driver.get("https://clarity-project.info/account")
        time.sleep(2)

    count = 0
    for idx, row in df.iterrows():
        if batch_size is not None and count >= batch_size:
            break

        edrpou = str(row["–ö–æ–¥ –Ñ–î–†–ü–û–£"]).strip()
        phone_existing = str(row["–¢–µ–ª–µ—Ñ–æ–Ω"]).strip() if pd.notna(row["–¢–µ–ª–µ—Ñ–æ–Ω"]) else ""

        if not edrpou or len(edrpou) < 5:
            continue

        if phone_existing != "":
            print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (–≤–∂–µ —î –Ω–æ–º–µ—Ä): {edrpou}")
            continue

        print(f"{count}üîç –û–±—Ä–æ–±–∫–∞: {edrpou}")
        phone = get_phone_number(driver, edrpou)
        df.at[idx, "–¢–µ–ª–µ—Ñ–æ–Ω"] = phone
        count += 1
        time.sleep(2)


    df.to_excel(OUTPUT_FILE, index=False)
    print(f"\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª: {OUTPUT_FILE}")

    driver.quit()


if __name__ == "__main__":
    # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –æ–±—Ä–æ–±–∏—Ç–∏ –ª–∏—à–µ 10 –ø–æ–∑–∏—Ü—ñ–π
    main(batch_size=197)
